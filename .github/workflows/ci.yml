name: ci

on:
  # Also on push so that codecov reports main branch coverage
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main

  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Enable tmate debug"
        type: boolean
        default: false

jobs:
  check-ahead-of-main:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch is ahead of main
        run: |
          if ! git merge-base --is-ancestor origin/main ${{ github.event.pull_request.head.sha }};
          then echo "::error::This branch is not up-to-date with the latest main branch commit.";
          exit 1; fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: 3.13

      - name: Run precommit
        run: SKIP=build-docs,check-branch-name uv run pre-commit run --all-files

  test:
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
        django-version: [">=4.2,<4.3", ">=5.0,<5.1"]
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest, macos-latest] for full coverage but this gets expensive quickly

    permissions:
      id-token: write
      contents: read

    env:
      DJANGO_SETTINGS_MODULE: tests.server.settings

    services:
      postgres:
        image: kartoza/postgis:13.0
        env:
          POSTGRES_DB: postgres_db
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.7" # Match the version in the devcontainer stack - see https://github.com/windpioneers/gdal-python/releases
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Install django ${{ matrix.django-version }}
        run: uv add "django${{ matrix.django-version }}"

      - name: Setup tmate session [DEBUG]
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true'}}
        uses: mxschmitt/action-tmate@v3

      - name: Run tests
        run: uv run pytest --cov=django_gcp --cov-report=xml

      - name: Upload coverage to Codecov
        # This seems redundant inside the test matrix but actually isn't, since different
        # dependency combinations may cause different lines of code to be hit (e.g. backports)
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          # Token is not strictly required for public repos, but see:
          # https://community.codecov.com/t/upload-issues-unable-to-locate-build-via-github-actions-api/3954
          token: ${{ secrets.CODECOV_TOKEN }}

  publish-test:
    runs-on: ubuntu-latest
    needs:
      - lint
      - check-ahead-of-main

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: 3.13

      - name: Build a binary wheel and a source tarball
        run: uv build

      - name: Test package is publishable with PyPI test server
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
